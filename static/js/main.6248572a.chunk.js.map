{"version":3,"sources":["shared/Context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/hooks/auth-hook.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","onClick","MainHeader","children","Navlinks","auth","useContext","to","exact","SideDrawer","nodeRef","React","useRef","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","ref","MainNavigation","logoutTimer","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6248572a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    token: null,\r\n    userId: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return <div className=\"backdrop\" onClick={props.onClick}></div>;\n};\n\nexport default Backdrop;\n","\r\n\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nfunction MainHeader(props) {\r\nreturn <header className=\"main-header\">{props.children}</header>;\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../Context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nfunction Navlinks(props) {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">Add Place</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Navlinks;\r\n","import React from \"react\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nfunction SideDrawer(props) {\r\n  const nodeRef = React.useRef();\r\n\r\n  return (\r\n    <CSSTransition\r\n      nodeRef={nodeRef}\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside ref={nodeRef} className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport Navlinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nimport \"./MainNavigation.css\";\r\n\r\nfunction MainNavigation(props) {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  function openDrawerHandler() {\r\n    setDrawerIsOpen(true);\r\n  }\r\n\r\n  function closeDrawerHandler() {\r\n    setDrawerIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <Navlinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <Navlinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    )\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n  }, [login]);\r\n\r\n\r\n  return { token , login, logout , userId} ;\r\n};\r\n","import React, { Suspense } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/Context/auth-context\";\nimport { useAuth } from \"./shared/components/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UsersPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner asOverlay />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}