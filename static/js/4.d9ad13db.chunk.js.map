{"version":3,"sources":["shared/Util/Validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/UIElements/Card.js","shared/components/FormElements/Input.js","shared/components/hooks/form-hooks.js","shared/components/FormElements/ImageUpload.js","users/pages/Auth.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","Card","props","className","style","children","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","useEffect","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","is","display","accept","ref","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.d9ad13db.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import './Card.css';\n\nfunction Card(props) {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../Util/Validators\";\r\nimport \"./Input.css\";\r\n\r\nfunction inputReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return { ...state, isTouched: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(event) {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  }\r\n\r\n  function touchHandler() {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  }\r\n\r\n  const element =\r\n    props.element === \"imput\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && `form-control--invalid`\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nfunction formReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId])\r\n        continue;\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n      case \"SET_DATA\": return {\r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function useForm(initialInputs, initialFormValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  },[]);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Button from \"../FormElements/Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nexport default function ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  function pickedHandler(event) {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  function pickImageHandler() {\r\n    filePickerRef.current.click();\r\n  }\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        is={props.id}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"preview\" />\r\n          ) : (\r\n            <p>Please pick an image</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n       {!isValid && <p>{props.errorText}</p>} \r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_EMAIL,\r\n} from \"../../shared/Util/Validators\";\r\n\r\nimport useForm from \"../../shared/components/hooks/form-hooks\";\r\nimport { AuthContext } from \"../../shared/Context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\r\nimport \"./Auth.css\";\r\n\r\nexport default function Auth() {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  async function authSubmitHandler(event) {\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  }\r\n\r\n  function switchModeHandler() {\r\n    if (!isLoginMode)\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    else\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  }\r\n\r\n  function errorHandler() {\r\n    clearError();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && (\r\n          <div className=\"center\">\r\n            <LoadingSpinner asOverlay />\r\n          </div>\r\n        )}\r\n        <h2>{isLoginMode ? \"LOGIN\" : \"SIGNUP\"}</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"password should be min 6 characters\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          Switch to {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}