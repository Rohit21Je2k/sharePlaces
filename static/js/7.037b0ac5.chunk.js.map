{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UserList","items","length","map","user","places","Users","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay"],"mappings":"oJAUeA,IARf,SAAcC,GACZ,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,oMCSEC,MAZf,SAAgBJ,GACd,OACE,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACE,qBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,cCsBpCE,MAvBf,SAAkBV,GAChB,OACE,oBAAIC,UAAU,YAAd,SACE,cAACF,EAAA,EAAD,CAAME,UAAU,qBAAhB,SACE,eAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,WAAR,UACE,qBAAKX,UAAU,mBAAf,SACE,cAAC,EAAD,CACEK,MAAK,UAAKO,2CAAL,YAAwCb,EAAMM,OACnDC,IAAKP,EAAMc,SAGf,sBAAKb,UAAU,kBAAf,UACE,6BAAKD,EAAMc,OACX,+BACGd,EAAMe,WADT,IAC2C,IAArBf,EAAMe,WAAmB,QAAU,uB,MCStDC,MA1Bf,SAAkBhB,GAChB,OAA2B,IAAvBA,EAAMiB,MAAMC,OAEZ,qBAAKjB,UAAU,SAAf,SACE,cAACF,EAAA,EAAD,UACE,oDAON,oBAAIE,UAAU,aAAd,SACGD,EAAMiB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEER,GAAIQ,EAAKR,GACTE,KAAMM,EAAKN,KACXC,WAAYK,EAAKC,OAAOH,OACxBZ,MAAOc,EAAKd,OAJPc,EAAKR,U,wBCgBLU,UA7Bf,WAAkB,IAAD,EACuBC,qBADvB,mBACRC,EADQ,KACKC,EADL,OAEuCC,cAA9CC,EAFO,EAEPA,UAAWC,EAFJ,EAEIA,MAAOC,EAFX,EAEWA,YAAaC,EAFxB,EAEwBA,WAcvC,OAZAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAE+BH,EAAY,GAAD,OACjChB,+CADiC,WAF1C,OAEUoB,EAFV,OAKIR,EAAeQ,EAAaC,OALhC,wGADc,uBAAC,WAAD,wBASdC,KACC,CAACN,IAGF,eAAC,IAAMO,SAAP,WACE,cAACC,EAAA,EAAD,CAAYT,MAAOA,EAAOU,QAASR,IAClCH,GACC,qBAAK1B,UAAU,SAAf,SACE,cAACsC,EAAA,EAAD,CAAgBC,WAAS,OAG3Bb,GAAaH,GAAe,cAAC,EAAD,CAAWP,MAAOO","file":"static/js/7.037b0ac5.chunk.js","sourcesContent":["import './Card.css';\n\nfunction Card(props) {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import \"./Avatar.css\";\n\nfunction Avatar(props) {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img \n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nimport \"./UserItem.css\";\r\n\r\nfunction UserItem(props) {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default UserItem;\r\n","import UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UsersList.css\";\r\n\r\nfunction UserList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n          image={user.image}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\r\n\r\nfunction Users() {\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    }\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}